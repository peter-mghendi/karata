@inject ISnackbar Snackbar 
<MudExpansionPanels DisableBorders="true" Elevation="0">
    <MudExpansionPanel Text="Information">
        <MudList>
            <MudListItem>Room ID: @Room.InviteLink</MudListItem>
            <MudListItem>Created: @Room.CreatedAt</MudListItem>
            <MudListItem>Creator: @Room.Creator.Email</MudListItem>
            <MudListItem>Current: @Game.Hands[Game.CurrentTurn].User.Email</MudListItem>
            <MudListItem>Players: @Game.Hands.Count</MudListItem>
            <MudListItem>Started: @Game.IsStarted</MudListItem>
        </MudList>
    </MudExpansionPanel>
    <MudExpansionPanel Text="Players">
        <MudList>
            @foreach (var hand in Game.Hands)
            {
                <MudListItem Text="@hand.User.Email"></MudListItem>
            }
        </MudList>
    </MudExpansionPanel>
    <MudExpansionPanel Text="Chat" MaxHeight="500">
        <MudTextField T="string" Label="Type your message:" Variant="Variant.Filled" @bind-Value="@message" Lines="5" />
        <MudButton OnClick="@Send" >Send Message</MudButton>
        <MudDivider DividerType="DividerType.Middle" Class="my-4" />

        <MudList>
            @foreach (var message in Room.Chats)
            {
                <MudListItem>
                    <div>
                        @if (message.Sender.Id == Player.Id)
                        {
                            <MudIcon Icon="@Icons.Rounded.Person" Class="me-2" />
                        }
                        <MudText>@message.Sender.Email</MudText>
                    </div>
                    <MudText>@message.Sent</MudText>
                    @message.Text
                </MudListItem>
            }
        </MudList>
    </MudExpansionPanel>
</MudExpansionPanels>

@code
{
    [Parameter]
    public UIRoom Room { get; set; }

    [Parameter]
    public UIUser Player { get; set; }

    [Parameter]
    public EventCallback<string> OnSend { get; set; }

    private UIGame Game => Room.Game;
    private string message;
    private async Task Send()
    {
        if (string.IsNullOrWhiteSpace(message))
        {
            Snackbar.Add("You must enter a message to send.", Severity.Error);
            return;
        }

        await OnSend.InvokeAsync(message);
        message = "";
    }
}